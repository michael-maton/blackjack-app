[{"C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\index.js":"1","C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\App.js":"2","C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\reducers\\index.js":"3","C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\components\\Card.js":"4","C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\components\\Player.js":"5","C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\components\\Dealer.js":"6","C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\actions\\index.js":"7"},{"size":610,"mtime":1607548912819,"results":"8","hashOfConfig":"9"},{"size":205,"mtime":1609553998579,"results":"10","hashOfConfig":"9"},{"size":4030,"mtime":1607559435222,"results":"11","hashOfConfig":"9"},{"size":4308,"mtime":1609796170201,"results":"12","hashOfConfig":"9"},{"size":393,"mtime":1609553280012,"results":"13","hashOfConfig":"9"},{"size":372,"mtime":1609730981458,"results":"14","hashOfConfig":"9"},{"size":2970,"mtime":1609552960211,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xstaxq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\index.js",[],["33","34"],"C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\App.js",[],"C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\reducers\\index.js",[],"C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\components\\Card.js",["35"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Player from \"./Player\";\r\nimport Dealer from \"./Dealer\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport {\r\n  getPlayerCard,\r\n  getDeck,\r\n  dealCards,\r\n  getDealerCard,\r\n  startNewGame,\r\n} from \"../actions\";\r\n\r\nconst Card = ({\r\n  deckID,\r\n  cardsRemaining,\r\n  isShuffling,\r\n  isDealing,\r\n  playerCards,\r\n  dealerCards,\r\n  isFetchingCard,\r\n  isFetchingDealerCard,\r\n  error,\r\n  playerTotal,\r\n  dealerTotal,\r\n  getPlayerCard,\r\n  getDealerCard,\r\n  getDeck,\r\n  dealCards,\r\n  startNewGame,\r\n}) => {\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [playerBust, setPlayerBust] = useState(false);\r\n  const [newPlayerTotal, setNewPlayerTotal] = useState(null);\r\n  const [newDealerTotal, setNewDealerTotal] = useState(null);\r\n  const [isDealerPlaying, setIsDealerPlaying] = useState(false);\r\n\r\n  if (error) {\r\n    return <h2>{error.message}</h2>;\r\n  }\r\n  if (isShuffling) {\r\n    return (\r\n      <h2>\r\n        Shuffling deck...\r\n        <Loader\r\n          className=\"shuffling\"\r\n          type=\"Hearts\"\r\n          color=\"#626977\"\r\n          height=\"100\"\r\n          width=\"100\"\r\n        />\r\n      </h2>\r\n    );\r\n  }\r\n  if (isDealing) {\r\n    return <h2>Dealing cards...</h2>;\r\n  }\r\n\r\n  const handleGetDeck = () => {\r\n    getDeck();\r\n  };\r\n  const handleDealCards = () => {\r\n    dealCards(deckID);\r\n  };\r\n  const handlePlayerHit = () => {\r\n    setNewPlayerTotal(playerTotal);\r\n    console.log(newPlayerTotal);\r\n    if (newPlayerTotal > 21) {\r\n      setPlayerBust(true);\r\n    } else {\r\n      getPlayerCard(deckID);\r\n    }\r\n  };\r\n  const handleDealerHit = () => {\r\n    setIsDealerPlaying(true);\r\n    if (isDealerPlaying === true) {\r\n      setNewDealerTotal(dealerTotal);\r\n      if (newDealerTotal < 16) {\r\n        getDealerCard(deckID);\r\n      } else {\r\n        setIsDealerPlaying(false);\r\n      }\r\n    }\r\n    setGameOver(true);\r\n  };\r\n\r\n  const handlePlayAgain = () => {\r\n    setGameOver(false);\r\n    setPlayerBust(false);\r\n    startNewGame();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card-table-border\">\r\n        <div className=\"card-table\">\r\n          <div className=\"card-container\">\r\n            {isFetchingCard ? <h2>Hitting...</h2> : null}\r\n            {isFetchingDealerCard ? <h2>Dealer hitting...</h2> : null}\r\n\r\n            <div className=\"dealer-cards\">\r\n              {dealerCards ? (\r\n                <Dealer cards={dealerCards} total={dealerTotal} />\r\n              ) : null}\r\n            </div>\r\n            <div className=\"player-cards\">\r\n              {playerCards ? (\r\n                <Player cards={playerCards} total={playerTotal} />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div className=\"playing-options\">\r\n          {playerCards && !gameOver ? (\r\n            <button onClick={handlePlayerHit}>Hit</button>\r\n          ) : null}\r\n          {/* {playerCards && !playerBust ? <button onClick={setIsDealerPlaying(true)}>Stay</button> : null} */}\r\n          {playerCards && !playerBust ? <button>Stay</button> : null}\r\n          {gameOver || error || playerBust ? (\r\n            <button onClick={handlePlayAgain}>Play Again</button>\r\n          ) : null}\r\n          {deckID ? null : (\r\n            <button onClick={handleGetDeck}>Get New Deck</button>\r\n          )}\r\n          {deckID && !playerCards ? (\r\n            <button onClick={handleDealCards}>Deal Cards</button>\r\n          ) : null}\r\n          {deckID ? (\r\n            <span>Cards remaining in deck: {cardsRemaining}</span>\r\n          ) : null}\r\n          {playerBust ? <div className=\"busted\">You busted!</div> : null}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    deckID: state.deckID,\r\n    cardsRemaining: state.cardsRemaining,\r\n    isShuffling: state.isShuffling,\r\n    isDealing: state.isDealing,\r\n    playerCards: state.playerCards,\r\n    dealerCards: state.dealerCards,\r\n    isFetchingCard: state.isFetchingCard,\r\n    isFetchingDealerCard: state.isFetchingDealerCard,\r\n    error: state.error,\r\n    playerTotal: state.playerTotal,\r\n    dealerTotal: state.dealerTotal,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getPlayerCard,\r\n  getDeck,\r\n  dealCards,\r\n  getDealerCard,\r\n  startNewGame,\r\n})(Card);\r\n","C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\components\\Player.js",[],"C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\components\\Dealer.js",[],"C:\\Users\\hoop\\Desktop\\Advanced React\\daily projects\\blackjack\\app\\src\\actions\\index.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":75,"column":9,"nodeType":"44","messageId":"45","endLine":75,"endColumn":24},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'handleDealerHit' is assigned a value but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]